// <auto-generated />
using System;
using ClassRegistration.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassRegistration.Infrastructure.Migrations
{
    [DbContext(typeof(ClassDbContext))]
    partial class ClassDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassRegistration.Domain.Models.Class", b =>
                {
                    b.Property<Guid>("ClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsClassFull")
                        .HasColumnType("bit");

                    b.Property<int>("MaxOccupancy")
                        .HasColumnType("int");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.HasKey("ClassID");

                    b.ToTable("Classes", (string)null);
                });

            modelBuilder.Entity("ClassRegistration.Domain.Models.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("ClassStudent", b =>
                {
                    b.Property<Guid>("EnrolledClassesClassID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EnrolledStudentsStudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EnrolledClassesClassID", "EnrolledStudentsStudentId");

                    b.HasIndex("EnrolledStudentsStudentId");

                    b.ToTable("ClassStudent");
                });

            modelBuilder.Entity("ClassStudent", b =>
                {
                    b.HasOne("ClassRegistration.Domain.Models.Class", null)
                        .WithMany()
                        .HasForeignKey("EnrolledClassesClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassRegistration.Domain.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("EnrolledStudentsStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
